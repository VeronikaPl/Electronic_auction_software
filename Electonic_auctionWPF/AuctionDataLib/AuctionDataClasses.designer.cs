#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AuctionDataLib
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class AuctionDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertUserBuyer(UserBuyer instance);
    partial void UpdateUserBuyer(UserBuyer instance);
    partial void DeleteUserBuyer(UserBuyer instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertUserSeller(UserSeller instance);
    partial void UpdateUserSeller(UserSeller instance);
    partial void DeleteUserSeller(UserSeller instance);
    #endregion
		
		public AuctionDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuctionDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuctionDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuctionDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserBuyer> UserBuyer
		{
			get
			{
				return this.GetTable<UserBuyer>();
			}
		}
		
		public System.Data.Linq.Table<Product> Product
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Order> Order
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<UserSeller> UserSeller
		{
			get
			{
				return this.GetTable<UserSeller>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class UserBuyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _buyer_id;
		
		private string _login_buyer;
		
		private string _password_buyer;
		
		private string _name_buyer;
		
		private string _email_buyer;
		
		private string _telephone_buyer;
		
		private EntitySet<Order> _Order;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbuyer_idChanging(int value);
    partial void Onbuyer_idChanged();
    partial void Onlogin_buyerChanging(string value);
    partial void Onlogin_buyerChanged();
    partial void Onpassword_buyerChanging(string value);
    partial void Onpassword_buyerChanged();
    partial void Onname_buyerChanging(string value);
    partial void Onname_buyerChanged();
    partial void Onemail_buyerChanging(string value);
    partial void Onemail_buyerChanged();
    partial void Ontelephone_buyerChanging(string value);
    partial void Ontelephone_buyerChanged();
    #endregion
		
		public UserBuyer()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buyer_id", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public int buyer_id
		{
			get
			{
				return this._buyer_id;
			}
			set
			{
				if ((this._buyer_id != value))
				{
					this.Onbuyer_idChanging(value);
					this.SendPropertyChanging();
					this._buyer_id = value;
					this.SendPropertyChanged("buyer_id");
					this.Onbuyer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_buyer", CanBeNull=false)]
		public string login_buyer
		{
			get
			{
				return this._login_buyer;
			}
			set
			{
				if ((this._login_buyer != value))
				{
					this.Onlogin_buyerChanging(value);
					this.SendPropertyChanging();
					this._login_buyer = value;
					this.SendPropertyChanged("login_buyer");
					this.Onlogin_buyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_buyer", CanBeNull=false)]
		public string password_buyer
		{
			get
			{
				return this._password_buyer;
			}
			set
			{
				if ((this._password_buyer != value))
				{
					this.Onpassword_buyerChanging(value);
					this.SendPropertyChanging();
					this._password_buyer = value;
					this.SendPropertyChanged("password_buyer");
					this.Onpassword_buyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_buyer", CanBeNull=false)]
		public string name_buyer
		{
			get
			{
				return this._name_buyer;
			}
			set
			{
				if ((this._name_buyer != value))
				{
					this.Onname_buyerChanging(value);
					this.SendPropertyChanging();
					this._name_buyer = value;
					this.SendPropertyChanged("name_buyer");
					this.Onname_buyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_buyer", CanBeNull=false)]
		public string email_buyer
		{
			get
			{
				return this._email_buyer;
			}
			set
			{
				if ((this._email_buyer != value))
				{
					this.Onemail_buyerChanging(value);
					this.SendPropertyChanging();
					this._email_buyer = value;
					this.SendPropertyChanged("email_buyer");
					this.Onemail_buyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone_buyer", CanBeNull=false)]
		public string telephone_buyer
		{
			get
			{
				return this._telephone_buyer;
			}
			set
			{
				if ((this._telephone_buyer != value))
				{
					this.Ontelephone_buyerChanging(value);
					this.SendPropertyChanging();
					this._telephone_buyer = value;
					this.SendPropertyChanged("telephone_buyer");
					this.Ontelephone_buyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserBuyer_Order", Storage="_Order", ThisKey="buyer_id", OtherKey="id_buyer")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.UserBuyer = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.UserBuyer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private string _name_product;
		
		private string _description;
		
		private int _amount;
		
		private int _price;
		
		private string _photo;
		
		private int _id_of_seller;
		
		private EntitySet<Order> _Order;
		
		private EntityRef<UserSeller> _UserSeller;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onname_productChanging(string value);
    partial void Onname_productChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnamountChanging(int value);
    partial void OnamountChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void Onid_of_sellerChanging(int value);
    partial void Onid_of_sellerChanged();
    #endregion
		
		public Product()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._UserSeller = default(EntityRef<UserSeller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_product", CanBeNull=false)]
		public string name_product
		{
			get
			{
				return this._name_product;
			}
			set
			{
				if ((this._name_product != value))
				{
					this.Onname_productChanging(value);
					this.SendPropertyChanging();
					this._name_product = value;
					this.SendPropertyChanged("name_product");
					this.Onname_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", CanBeNull=false)]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_id_of_seller")]
		public int id_of_seller
		{
			get
			{
				return this._id_of_seller;
			}
			set
			{
				if ((this._id_of_seller != value))
				{
					this.Onid_of_sellerChanging(value);
					this.SendPropertyChanging();
					this._id_of_seller = value;
					this.SendPropertyChanged("id_of_seller");
					this.Onid_of_sellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order", Storage="_Order", ThisKey="product_id", OtherKey="id_product")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSeller_Product", Storage="_UserSeller", ThisKey="id_of_seller", OtherKey="seller_id", IsForeignKey=true)]
		public UserSeller UserSeller
		{
			get
			{
				return this._UserSeller.Entity;
			}
			set
			{
				UserSeller previousValue = this._UserSeller.Entity;
				if (((previousValue != value) 
							|| (this._UserSeller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSeller.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._UserSeller.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._id_of_seller = value.seller_id;
					}
					else
					{
						this._id_of_seller = default(int);
					}
					this.SendPropertyChanged("UserSeller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_order;
		
		private int _id_buyer;
		
		private int _id_seller;
		
		private int _amount_product;
		
		private System.Nullable<int> _price_order;
		
		private System.Nullable<System.DateTime> _departure_date;
		
		private System.Nullable<System.DateTime> _receiving_date;
		
		private int _id_product;
		
		private EntityRef<UserBuyer> _UserBuyer;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<UserSeller> _UserSeller;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_orderChanging(int value);
    partial void Onid_orderChanged();
    partial void Onid_buyerChanging(int value);
    partial void Onid_buyerChanged();
    partial void Onid_sellerChanging(int value);
    partial void Onid_sellerChanged();
    partial void Onamount_productChanging(int value);
    partial void Onamount_productChanged();
    partial void Onprice_orderChanging(System.Nullable<int> value);
    partial void Onprice_orderChanged();
    partial void Ondeparture_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondeparture_dateChanged();
    partial void Onreceiving_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onreceiving_dateChanged();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    #endregion
		
		public Order()
		{
			this._UserBuyer = default(EntityRef<UserBuyer>);
			this._Product = default(EntityRef<Product>);
			this._UserSeller = default(EntityRef<UserSeller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_order", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_order
		{
			get
			{
				return this._id_order;
			}
			set
			{
				if ((this._id_order != value))
				{
					this.Onid_orderChanging(value);
					this.SendPropertyChanging();
					this._id_order = value;
					this.SendPropertyChanged("id_order");
					this.Onid_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_buyer")]
		public int id_buyer
		{
			get
			{
				return this._id_buyer;
			}
			set
			{
				if ((this._id_buyer != value))
				{
					if (this._UserBuyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_buyerChanging(value);
					this.SendPropertyChanging();
					this._id_buyer = value;
					this.SendPropertyChanged("id_buyer");
					this.Onid_buyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_seller")]
		public int id_seller
		{
			get
			{
				return this._id_seller;
			}
			set
			{
				if ((this._id_seller != value))
				{
					if (this._UserSeller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_sellerChanging(value);
					this.SendPropertyChanging();
					this._id_seller = value;
					this.SendPropertyChanged("id_seller");
					this.Onid_sellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_product")]
		public int amount_product
		{
			get
			{
				return this._amount_product;
			}
			set
			{
				if ((this._amount_product != value))
				{
					this.Onamount_productChanging(value);
					this.SendPropertyChanging();
					this._amount_product = value;
					this.SendPropertyChanged("amount_product");
					this.Onamount_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_order")]
		public System.Nullable<int> price_order
		{
			get
			{
				return this._price_order;
			}
			set
			{
				if ((this._price_order != value))
				{
					this.Onprice_orderChanging(value);
					this.SendPropertyChanging();
					this._price_order = value;
					this.SendPropertyChanged("price_order");
					this.Onprice_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_date")]
		public System.Nullable<System.DateTime> departure_date
		{
			get
			{
				return this._departure_date;
			}
			set
			{
				if ((this._departure_date != value))
				{
					this.Ondeparture_dateChanging(value);
					this.SendPropertyChanging();
					this._departure_date = value;
					this.SendPropertyChanged("departure_date");
					this.Ondeparture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiving_date")]
		public System.Nullable<System.DateTime> receiving_date
		{
			get
			{
				return this._receiving_date;
			}
			set
			{
				if ((this._receiving_date != value))
				{
					this.Onreceiving_dateChanging(value);
					this.SendPropertyChanging();
					this._receiving_date = value;
					this.SendPropertyChanged("receiving_date");
					this.Onreceiving_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product")]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserBuyer_Order", Storage="_UserBuyer", ThisKey="id_buyer", OtherKey="buyer_id", IsForeignKey=true)]
		public UserBuyer UserBuyer
		{
			get
			{
				return this._UserBuyer.Entity;
			}
			set
			{
				UserBuyer previousValue = this._UserBuyer.Entity;
				if (((previousValue != value) 
							|| (this._UserBuyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserBuyer.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._UserBuyer.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._id_buyer = value.buyer_id;
					}
					else
					{
						this._id_buyer = default(int);
					}
					this.SendPropertyChanged("UserBuyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order", Storage="_Product", ThisKey="id_product", OtherKey="product_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._id_product = value.product_id;
					}
					else
					{
						this._id_product = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSeller_Order", Storage="_UserSeller", ThisKey="id_seller", OtherKey="seller_id", IsForeignKey=true)]
		public UserSeller UserSeller
		{
			get
			{
				return this._UserSeller.Entity;
			}
			set
			{
				UserSeller previousValue = this._UserSeller.Entity;
				if (((previousValue != value) 
							|| (this._UserSeller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserSeller.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._UserSeller.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._id_seller = value.seller_id;
					}
					else
					{
						this._id_seller = default(int);
					}
					this.SendPropertyChanged("UserSeller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class UserSeller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _seller_id;
		
		private string _login_seller;
		
		private string _password_seller;
		
		private string _name_seller;
		
		private string _email_seller;
		
		private string _telephone_seller;
		
		private EntitySet<Product> _Product;
		
		private EntitySet<Order> _Order;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onseller_idChanging(int value);
    partial void Onseller_idChanged();
    partial void Onlogin_sellerChanging(string value);
    partial void Onlogin_sellerChanged();
    partial void Onpassword_sellerChanging(string value);
    partial void Onpassword_sellerChanged();
    partial void Onname_sellerChanging(string value);
    partial void Onname_sellerChanged();
    partial void Onemail_sellerChanging(string value);
    partial void Onemail_sellerChanged();
    partial void Ontelephone_sellerChanging(string value);
    partial void Ontelephone_sellerChanged();
    #endregion
		
		public UserSeller()
		{
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_id", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public int seller_id
		{
			get
			{
				return this._seller_id;
			}
			set
			{
				if ((this._seller_id != value))
				{
					this.Onseller_idChanging(value);
					this.SendPropertyChanging();
					this._seller_id = value;
					this.SendPropertyChanged("seller_id");
					this.Onseller_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_seller", CanBeNull=false)]
		public string login_seller
		{
			get
			{
				return this._login_seller;
			}
			set
			{
				if ((this._login_seller != value))
				{
					this.Onlogin_sellerChanging(value);
					this.SendPropertyChanging();
					this._login_seller = value;
					this.SendPropertyChanged("login_seller");
					this.Onlogin_sellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_seller", CanBeNull=false)]
		public string password_seller
		{
			get
			{
				return this._password_seller;
			}
			set
			{
				if ((this._password_seller != value))
				{
					this.Onpassword_sellerChanging(value);
					this.SendPropertyChanging();
					this._password_seller = value;
					this.SendPropertyChanged("password_seller");
					this.Onpassword_sellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_seller", CanBeNull=false)]
		public string name_seller
		{
			get
			{
				return this._name_seller;
			}
			set
			{
				if ((this._name_seller != value))
				{
					this.Onname_sellerChanging(value);
					this.SendPropertyChanging();
					this._name_seller = value;
					this.SendPropertyChanged("name_seller");
					this.Onname_sellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_seller", CanBeNull=false)]
		public string email_seller
		{
			get
			{
				return this._email_seller;
			}
			set
			{
				if ((this._email_seller != value))
				{
					this.Onemail_sellerChanging(value);
					this.SendPropertyChanging();
					this._email_seller = value;
					this.SendPropertyChanged("email_seller");
					this.Onemail_sellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone_seller", CanBeNull=false)]
		public string telephone_seller
		{
			get
			{
				return this._telephone_seller;
			}
			set
			{
				if ((this._telephone_seller != value))
				{
					this.Ontelephone_sellerChanging(value);
					this.SendPropertyChanging();
					this._telephone_seller = value;
					this.SendPropertyChanged("telephone_seller");
					this.Ontelephone_sellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSeller_Product", Storage="_Product", ThisKey="seller_id", OtherKey="id_of_seller")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserSeller_Order", Storage="_Order", ThisKey="seller_id", OtherKey="id_seller")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.UserSeller = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.UserSeller = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.UserSeller = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.UserSeller = null;
		}
	}
}
#pragma warning restore 1591
